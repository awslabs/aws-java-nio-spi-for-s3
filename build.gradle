/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

group = 'software.amazon.nio.s3'
archivesBaseName = 'nio-spi-for-s3'
version = '1.2.3'

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8


java {
    withSourcesJar()
    withJavadocJar()
}

compileJava {
    // see https://docs.gradle.org/6.6/userguide/building_java_projects.html#sec:java_cross_compilation
    options.release = 8
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'

    implementation platform('software.amazon.awssdk:bom:2.20.79')

    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:s3-transfer-manager:2.20.78'
    implementation 'software.amazon.awssdk.crt:aws-crt:0.22.1'
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.7'
    implementation 'ch.qos.logback:logback-core:1.4.7'
    // cannot use caffeine v3 because that requires java 11
    implementation('com.github.ben-manes.caffeine:caffeine:2.9.3')
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'AWS Java NIO SPI for S3'
                description = 'A Java NIO.2 service provider for S3, allowing Java NIO operations to be performed on paths using the `s3` scheme. This\n' +
                        'package implements the service provider interface (SPI) defined for Java NIO.2 in JDK 1.7 providing "plug-in" non-blocking\n' +
                        'access to S3 objects for Java applications using Java NIO.2 for file access.'
                url = 'https://github.com/awslabs/aws-java-nio-spi-for-s3'
                inceptionYear = '2022'
                scm {
                    url = 'https://github.com/awslabs/aws-java-nio-spi-for-s3/tree/main'
                    connection = 'scm:git:ssh://git@github.com/awslabs/aws-java-nio-spi-for-s3.git'
                    developerConnection = 'scm:git:ssh://git@github.com/awslabs/aws-java-nio-spi-for-s3.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'markjschreiber'
                        name = 'Mark Schreiber'
                        email = 'mrschre@amazon.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://aws.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://aws.oss.sonatype.org/content/repositories/snapshots'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials(PasswordCredentials)
        }
    }
}

signing {
    sign publishing.publications.maven
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        xml.outputLocation = file("build/reports/coverage.xml")
    }
}
